generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -------------------------
// User Model & Auth Method
// -------------------------
model User {
  id             Int             @id @default(autoincrement())
  name           String
  email          String          @unique
  password       String?
  authMethod     AuthMethod
  portfolios     Portfolio[]
  watchlists     Watchlist[]
  zerodhaAccount ZerodhaAccount?
  upstoxAccount  UpstoxAccount?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

enum AuthMethod {
  GOOGLE
  EMAIL
}

// -------------------------
// Zerodha & Upstox Link Models
// -------------------------
model ZerodhaAccount {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
  clientId    String
  accessToken String
  isLinked    Boolean  @default(false)
  linkedAt    DateTime @default(now())
}

model UpstoxAccount {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
  clientId    String
  accessToken String
  isLinked    Boolean  @default(false)
  linkedAt    DateTime @default(now())
}

// -------------------------
// Stock / Crypto Catalogs
// -------------------------
model IndiaStock {
  id             Int      @id @default(autoincrement())
  symbol         String   @unique
  name           String
  prevClosePrice Float
  openPrice      Float
  currentPrice   Float
  listedAt       DateTime @default(now())
}

model USStock {
  id             Int      @id @default(autoincrement())
  symbol         String   @unique
  name           String
  prevClosePrice Float
  openPrice      Float
  currentPrice   Float
  listedAt       DateTime @default(now())
}

model CryptoAsset {
  id             Int      @id @default(autoincrement())
  symbol         String   @unique
  name           String
  prevClosePrice Float
  openPrice      Float
  currentPrice   Float
  listedAt       DateTime @default(now())
}

// -------------------------
// User Portfolio Models
// -------------------------
model Portfolio {
  id          Int           @id @default(autoincrement())
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  type        PortfolioType
  stockSymbol String
  quantity    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PortfolioType {
  INDIA
  US
  CRYPTO
}

// -------------------------
// Watchlist Model
// -------------------------
model Watchlist {
  id          Int           @id @default(autoincrement())
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  type        WatchlistType
  stockSymbol String
  createdAt   DateTime      @default(now())
}

enum WatchlistType {
  INDIA
  US
  CRYPTO
}
